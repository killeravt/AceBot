# - *- coding: utf- 8 - *-
import telebot
import random
import requests
from telebot import types
from pyowm import OWM
from pyowm.utils.config import get_default_config
from bs4 import BeautifulSoup
config_dict = get_default_config()
config_dict['language'] = 'ru'
bot = telebot.TeleBot("1417359954:AAFP4u8nFHh3rYzY-76-SED2JgDA_Lewplo")
owm = OWM('c4153a7bc6d29047fcba68583813033b', config_dict)

@bot.message_handler(commands=["start"])
def start_message(message):
    user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
    user_markup.row("–ü–æ–≥–æ–¥–∞üåßÔ∏è", "–ö—É—Ä—Å—ã –≤–∞–ª—é—Çüí∏", "–û—Ä–µ–ª/–†–µ—à–∫–∞ü¶Ö", "–ö–æ—Ä–æ–Ω–∞üëë")
    bot.send_message(message.chat.id, "–î–æ–±—Ä—ã–π –¥–µ–Ω—å", reply_markup=user_markup)

@bot.message_handler(regexp="–ö–æ—Ä–æ–Ω–∞")
def corona(message):
	keyboardCov = telebot.types.InlineKeyboardMarkup()
	cb1 = telebot.types.InlineKeyboardButton(text="–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞ –≤ –ö–∏–µ–≤–µ", callback_data="l24")
	cb2 = telebot.types.InlineKeyboardButton(text="–∑–∞ –≤—Å–µ –≤—Ä–µ–º—è –≤ –ö–∏–µ–≤–µ", callback_data="all1")
	keyboardCov.add(cb1, cb2)
	bot.send_message(message.chat.id, "–£–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–±–æ–ª–µ–≤—à–∏—Ö: ", reply_markup=keyboardCov)


@bot.message_handler(regexp="–ü–æ–≥–æ–¥–∞")
def selectCounrty(message):
    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω
    keyboard = telebot.types.InlineKeyboardMarkup()
    kb1 = telebot.types.InlineKeyboardButton(text="–ö–∏–µ–≤", callback_data="country1")
    kb2 = telebot.types.InlineKeyboardButton(text="–ú–æ—Å–∫–≤–∞", callback_data="country2")
    kb3 = telebot.types.InlineKeyboardButton(text="–î—É–±–∞–∏", callback_data="country3")
    kb4 = telebot.types.InlineKeyboardButton(text="–®–∞—Ä–º-—ç–ª—å-–®–µ–π—Ö", callback_data="country4")
    kb5 = telebot.types.InlineKeyboardButton(text="–í–∞–ª–µ–Ω—Å–∏—è", callback_data="country5")
    kb6 = telebot.types.InlineKeyboardButton(text="–ë—Ä–Ω–æ", callback_data="country6")
    kb7 = telebot.types.InlineKeyboardButton(text="–ë—ã–¥–≥–æ—â", callback_data="country7")
    keyboard.add(kb1, kb2, kb3, kb4, kb5, kb6, kb7)
    bot.send_message(message.chat.id, "–ü–æ–≥–æ–¥–∞ –≤ –≤—ã–±—Ä–∞–Ω–æ–π —Å—Ç—Ä–∞–Ω–µ: ", reply_markup=keyboard)

@bot.message_handler(regexp="–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç")
def value_message(message):
    keyboardV = telebot.types.InlineKeyboardMarkup()
    kbv1 = telebot.types.InlineKeyboardButton(text="–î–æ–ª–ª–∞—Ä", callback_data="USD")
    kbv2 = telebot.types.InlineKeyboardButton(text="–ï–≤—Ä–æ", callback_data="EUR")
    kbv3 = telebot.types.InlineKeyboardButton(text="–ü–æ–ª—å—Å–∫–∏–π –∑–ª–æ—Ç—ã–π", callback_data="PLN")
    keyboardV.add(kbv1, kbv2, kbv3)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É: ", reply_markup=keyboardV)

@bot.callback_query_handler(func=lambda call:True)
def inline(call):
	if call.data == 'country1':
		place = '–ö–∏–µ–≤'
		try:
			bot.answer_callback_query(callback_query_id=call.id, text='–ò—â–µ–º –ø–æ–≥–æ–¥—É!')
			mgr = owm.weather_manager()
			observation = mgr.weather_at_place(place)
			w = observation.weather
			weather = mgr.weather_at_place(place).weather
			temp_dict_celsius = weather.temperature('celsius')['temp']
			bot.send_message(call.message.chat.id, '–í –≥–æ—Ä–æ–¥–µ ' + place + ' —Å–µ–π—á–∞—Å ' + w.detailed_status )
			bot.send_message(call.message.chat.id, "–ù–∞ —É–ª–∏—Ü–µ " + str(temp_dict_celsius) + " –≥—Ä–∞–¥—É—Å–æ–≤ –ø–æ –¶–µ–ª—å—Å–∏—é.")
			bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
		except:
			bot.send_message(call.message.chat.id,'–û—à–∏–±–∫–∞! –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.')
			bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
	if call.data == 'country2':
		place = '–ú–æ—Å–∫–≤–∞'
		try:
			bot.answer_callback_query(callback_query_id=call.id, text='–ò—â–µ–º –ø–æ–≥–æ–¥—É!')
			mgr = owm.weather_manager()
			observation = mgr.weather_at_place(place)
			w = observation.weather
			weather = mgr.weather_at_place(place).weather
			temp_dict_celsius = weather.temperature('celsius')['temp']
			bot.send_message(call.message.chat.id, '–í –≥–æ—Ä–æ–¥–µ ' + place + ' —Å–µ–π—á–∞—Å ' + w.detailed_status )
			bot.send_message(call.message.chat.id, "–ù–∞ —É–ª–∏—Ü–µ " + str(temp_dict_celsius) + " –≥—Ä–∞–¥—É—Å–æ–≤ –ø–æ –¶–µ–ª—å—Å–∏—é.")
			bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
		except:
			bot.send_message(call.message.chat.id,'–û—à–∏–±–∫–∞! –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.')
			bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
	if call.data == 'country3':
		place = '–î—É–±–∞–π'
		try:
			bot.answer_callback_query(callback_query_id=call.id, text='–ò—â–µ–º –ø–æ–≥–æ–¥—É!')
			mgr = owm.weather_manager()
			observation = mgr.weather_at_place(place)
			w = observation.weather
			weather = mgr.weather_at_place(place).weather
			temp_dict_celsius = weather.temperature('celsius')['temp']
			bot.send_message(call.message.chat.id, '–í –≥–æ—Ä–æ–¥–µ ' + place + ' —Å–µ–π—á–∞—Å ' + w.detailed_status )
			bot.send_message(call.message.chat.id, "–ù–∞ —É–ª–∏—Ü–µ " + str(temp_dict_celsius) + " –≥—Ä–∞–¥—É—Å–æ–≤ –ø–æ –¶–µ–ª—å—Å–∏—é.")
			bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
		except:
			bot.send_message(call.message.chat.id,'–û—à–∏–±–∫–∞! –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.')
			bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
	if call.data == 'country4':
		place = '–®–∞—Ä–º-—ç–ª—å-–®–µ–π—Ö'
		try:
			bot.answer_callback_query(callback_query_id=call.id, text='–ò—â–µ–º –ø–æ–≥–æ–¥—É!')
			mgr = owm.weather_manager()
			observation = mgr.weather_at_place(place)
			w = observation.weather
			weather = mgr.weather_at_place(place).weather
			temp_dict_celsius = weather.temperature('celsius')['temp']
			bot.send_message(call.message.chat.id, '–í –≥–æ—Ä–æ–¥–µ ' + place + ' —Å–µ–π—á–∞—Å ' + w.detailed_status )
			bot.send_message(call.message.chat.id, "–ù–∞ —É–ª–∏—Ü–µ " + str(temp_dict_celsius) + " –≥—Ä–∞–¥—É—Å–æ–≤ –ø–æ –¶–µ–ª—å—Å–∏—é.")
			bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
		except:
			bot.send_message(call.message.chat.id,'–û—à–∏–±–∫–∞! –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.')
			bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
	if call.data == 'country5':
		place = '–í–∞–ª–µ–Ω—Å–∏—è'
		try:
			bot.answer_callback_query(callback_query_id=call.id, text='–ò—â–µ–º –ø–æ–≥–æ–¥—É!')
			mgr = owm.weather_manager()
			observation = mgr.weather_at_place(place)
			w = observation.weather
			weather = mgr.weather_at_place(place).weather
			temp_dict_celsius = weather.temperature('celsius')['temp']
			bot.send_message(call.message.chat.id, '–í –≥–æ—Ä–æ–¥–µ ' + place + ' —Å–µ–π—á–∞—Å ' + w.detailed_status )
			bot.send_message(call.message.chat.id, "–ù–∞ —É–ª–∏—Ü–µ " + str(temp_dict_celsius) + " –≥—Ä–∞–¥—É—Å–æ–≤ –ø–æ –¶–µ–ª—å—Å–∏—é.")
			bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
		except:
			bot.send_message(call.message.chat.id,'–û—à–∏–±–∫–∞! –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.')
			bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
	if call.data == 'country6':
		place = '–ë—Ä–Ω–æ'
		try:
			bot.answer_callback_query(callback_query_id=call.id, text='–ò—â–µ–º –ø–æ–≥–æ–¥—É!')
			mgr = owm.weather_manager()
			observation = mgr.weather_at_place(place)
			w = observation.weather
			weather = mgr.weather_at_place(place).weather
			temp_dict_celsius = weather.temperature('celsius')['temp']
			bot.send_message(call.message.chat.id, '–í –≥–æ—Ä–æ–¥–µ ' + place + ' —Å–µ–π—á–∞—Å ' + w.detailed_status )
			bot.send_message(call.message.chat.id, "–ù–∞ —É–ª–∏—Ü–µ " + str(temp_dict_celsius) + " –≥—Ä–∞–¥—É—Å–æ–≤ –ø–æ –¶–µ–ª—å—Å–∏—é.")
			bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
		except:
			bot.send_message(call.message.chat.id,'–û—à–∏–±–∫–∞! –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.')
			bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
	if call.data == 'country7':
		place = '–ë—ã–¥–≥–æ—â'
		try:
			bot.answer_callback_query(callback_query_id=call.id, text='–ò—â–µ–º –ø–æ–≥–æ–¥—É!')
			mgr = owm.weather_manager()
			observation = mgr.weather_at_place(place)
			w = observation.weather
			weather = mgr.weather_at_place(place).weather
			temp_dict_celsius = weather.temperature('celsius')['temp']
			bot.send_message(call.message.chat.id, '–í –≥–æ—Ä–æ–¥–µ ' + place + ' —Å–µ–π—á–∞—Å ' + w.detailed_status )
			bot.send_message(call.message.chat.id, "–ù–∞ —É–ª–∏—Ü–µ " + str(temp_dict_celsius) + " –≥—Ä–∞–¥—É—Å–æ–≤ –ø–æ –¶–µ–ª—å—Å–∏—é.")
			bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
		except:
			bot.send_message(call.message.chat.id,'–û—à–∏–±–∫–∞! –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.')
			bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
	if call.data == 'USD':
		bot.answer_callback_query(callback_query_id=call.id, text='–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.')
		HRN_USD = 'https://www.google.com/search?client=opera-gx&q=–∫—É—Ä—Å+–¥–æ–ª–ª–∞—Ä–∞&sourceid=opera&ie=UTF-8&oe=UTF-8'
		headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36 OPR/71.0.3770.456'}
		full_page = requests.get(HRN_USD, headers=headers)
		soup = BeautifulSoup(full_page.content, 'html.parser')
		convert = soup.findAll("span", {"class": "DFlfde", "class": "SwHCTb", 'data-precision': 2})
		kurs = convert[0].text
		bot.send_message(call.message.chat.id, '–û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –ì—Ä–∏–≤–Ω—ã –∫ –î–æ–ª–ª–∞—Ä—É: ' + str(kurs) + ' –∫ 1')
		bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
	if call.data == 'EUR':
		bot.answer_callback_query(callback_query_id=call.id, text='–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.')
		HRN_EUR = 'https://www.google.com/search?client=opera-gx&hs=FDx&sxsrf=ALeKk02bTyXm-nlXNsi5n0l2l2V0eNjwWQ%3A1608213024694&ei=IGLbX9PoKamZlwSFuLbgBQ&q=–µ–≤—Ä–æ+–∫+–≥—Ä–∏–≤–Ω–µ&oq=–µ–≤—Ä–æ+–∫+–≥—Ä–∏–≤–Ω–µ&gs_lcp=CgZwc3ktYWIQAzINCAAQyQMQywEQRhCCAjIFCAAQywEyBQgAEMsBMgUIABDLATIFCAAQywEyBQgAEMsBMgUIABDLATIFCAAQywEyBQgAEMsBMgUIABDLAToECCMQJzoFCAAQyQM6AggAOggIABDJAxDLAToHCAAQChDLAToKCAAQyQMQChDLAToICAAQFhAKEB46BggAEBYQHlDcEVjzJWCYJ2gCcAF4AIABiwGIAbANkgEEMi4xM5gBAKABAaoBB2d3cy13aXrAAQE&sclient=psy-ab&ved=0ahUKEwjT-LywlNXtAhWpzIUKHQWcDVwQ4dUDCAw&uact=5'
		headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36 OPR/71.0.3770.456'}
		full_page = requests.get(HRN_EUR, headers=headers)
		soup = BeautifulSoup(full_page.content, 'html.parser')
		convert = soup.findAll("span", {"class": "DFlfde", "class": "SwHCTb", 'data-precision': 2})
		kurs = convert[0].text
		bot.send_message(call.message.chat.id, '–û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –ì—Ä–∏–≤–Ω—ã –∫ –ï–≤—Ä–æ: ' + str(kurs) + ' –∫ 1')
		bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
	if call.data == 'PLN':
		bot.answer_callback_query(callback_query_id=call.id, text='–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.')
		HRN_PLN = 'https://www.google.com/search?client=opera-gx&sxsrf=ALeKk01D4JIpsQsXR_lQv3UK0ilXzKLY7Q%3A1608213393815&ei=kWPbX5yhMY2wrgSpnbXYCQ&q=–∑–ª–æ—Ç—ã–π+–∫+–≥—Ä–∏–≤–Ω–µ&oq=–∑–ª–æ—Ç—ã–π+–∫+–≥—Ä–∏–≤–Ω–µ&gs_lcp=CgZwc3ktYWIQAzIFCAAQywEyBQgAEMsBMgUIABDLATIFCAAQywEyBQgAEMsBMgUIABDLATIFCAAQywEyBQgAEMsBMgUIABDLATIFCAAQywE6BAgAEEdQvNMBWIfUAWD52wFoAHACeACAAYkBiAGSApIBAzAuMpgBAKABAaoBB2d3cy13aXrIAQjAAQE&sclient=psy-ab&ved=0ahUKEwjcrb7gldXtAhUNmIsKHalODZsQ4dUDCAw&uact=5'
		headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36 OPR/71.0.3770.456'}
		full_page = requests.get(HRN_PLN, headers=headers)
		soup = BeautifulSoup(full_page.content, 'html.parser')
		convert = soup.findAll("span", {"class": "DFlfde", "class": "SwHCTb", 'data-precision': 2})
		kurs = convert[0].text
		bot.send_message(call.message.chat.id, '–û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –ì—Ä–∏–≤–Ω—ã –∫ –ü–æ–ª—å—Å–∫–æ–º—É –∑–ª–æ—Ç–æ–º—É: ' + str(kurs) + ' –∫ 1')
		bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
	if call.data == 'l24':
		bot.answer_callback_query(callback_query_id=call.id, text='–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.')
		TWURL = "https://news.google.com/covid19/map?hl=en-US&mid=%2Fm%2F02h7_7&gl=US&ceid=US%3Aen"
		headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36 OPR/71.0.3770.456'}
		full_page = requests.get(TWURL, headers=headers)
		soup = BeautifulSoup(full_page.content, 'html.parser')
		#covid = soup.findAll("div", {"class": "tIUMlb"})
		covid = soup.findAll("strong")
		info = covid[0].text
		original = info
		removed = original.replace("+", "")
		bot.send_message(call.message.chat.id, "–ó–∞ –ø—Ä–æ—à–ª—ã–µ —Å—É—Ç–∫–∏ –≤ –ö–∏–µ–≤–µ –±—ã–ª–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ " + removed + " —Å–ª—É—á–∞–µ–≤ Covid 19")
		bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
	if call.data == 'all1':
		bot.answer_callback_query(callback_query_id=call.id, text='–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.')
		TWURL = "https://news.google.com/covid19/map?hl=en-US&mid=%2Fm%2F02h7_7&gl=US&ceid=US%3Aen"
		headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36 OPR/71.0.3770.456'}
		full_page = requests.get(TWURL, headers=headers)
		soup = BeautifulSoup(full_page.content, 'html.parser')
		covid = soup.findAll("div", {"class": "UvMayb"})
		info = covid[0].text
		original = info
		removed = original.replace(",", "")
		bot.send_message(call.message.chat.id, "–ó–∞ –ø–µ—Ä–∏–æ–¥ 2020-–≥–æ –≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ –ö–∏–µ–≤ –±—ã–ª–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ " + removed + " —Å–ª—É—á–∞–µ–≤ Covid 19")
		bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)

@bot.message_handler(regexp="–û—Ä–µ–ª/–†–µ—à–∫–∞")
def coinflip(message):
	x = random.randint(0, 100)
	if x % 2 == 0:
		bot.send_message(message.chat.id, "–û—Ä–µ–ª" )
	else:
		bot.send_message(message.chat.id, "–†–µ—à–∫–∞" )

bot.polling(none_stop=True)




	
	
